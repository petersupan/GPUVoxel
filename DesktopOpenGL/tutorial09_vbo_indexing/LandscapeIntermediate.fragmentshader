#version 430

#define HEIGHT_MUL 1.0
#define NR_STEPS 1024.0

// Interpolated values from the vertex shaders
in vec2 UV;
in vec3 UV_unrotated;
in vec3 Position_worldspace;
in vec3 Normal_cameraspace;
in vec3 EyeDirection_cameraspace;
in vec3 LightDirection_cameraspace;

// Ouput data
layout(location = 0) out vec4 color;
layout(location = 1) out vec4 color1;

// Values that stay constant for the whole mesh.
uniform sampler2D myTextureSampler;
uniform sampler2D heightSampler;
uniform mat4 V;

uniform vec3 cameraPosition;

void main(){
	vec2 tc = UV;
	//tc = tc- 1.0 * 2.0;
	float angle = tc.x * 6.28;
	float l = tc.y;
	vec2 dir = vec2(sin(angle), cos(angle));
	tc = (cameraPosition.xz * 0.03) + dir*vec2(l);
	//tc = (V * (vec4(UV_unrotated.xzy, 0))).xz;
	//tc.x = (tc.x - 0.5) * (UV.y) + 0.5;
	//tc.xy = (tc.xy - 0.5) * (UV.yy) + 0.5;
	
	//original! tc.x = (tc.x - 0.5) * (tc.y) + 0.5;
	//tc += cameraPosition.xz * 0.03;
	color = textureLod(myTextureSampler, tc,0);
	float height = textureLod(heightSampler, tc, 0).r;
	color.a = height;

	float mixVal = pow((gl_FragCoord.y / 1024.0), 4.0);
	//color1.rgb = smoothstep(vec3(0.0, 0.0, 1.0), vec3(0.5, 0.5, 1.0), vec3(1.0- mixVal));
	color1.rgb = mix(vec3(0.5, 0.5, 1.0), vec3(0.0, 0.0, 1.0), vec3(mixVal));
	color1.a = 1.0;
}
